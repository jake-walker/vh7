/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/shorten": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create a new shortened URL */
        post: operations["postApiShorten"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/paste": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create a new shared code snippet */
        post: operations["postApiPaste"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Upload a new shared file */
        post: operations["postApiUpload"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/info/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve information on the given short link item */
        get: operations["getApiInfoById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/delete/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Delete a short link item with it's delete token */
        delete: operations["deleteApiDeleteById"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    postApiShorten: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: uri
                     * @example https://example.com
                     */
                    url: string;
                } & {
                    /**
                     * @description Unix timestamp for when the item will expire in milliseconds. Must be between 0 and 1 year (31 days for files).
                     * @default 1760881868781
                     * @example 1735689600000
                     */
                    expires: number | null;
                    /** @description An optional string that allows you to later delete the item before it expires. */
                    deleteToken?: string | null;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id: string;
                        url: string;
                        createdAt: string;
                        updatedAt: string;
                        expiresAt: string | null;
                        type: string;
                    };
                };
            };
        };
    };
    postApiPaste: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @example def add(a, b):
                     *         return a + b */
                    code: string;
                    /**
                     * @description If provided, the code will syntax highlighted for this language.
                     * @example python
                     */
                    language?: string | null;
                } & {
                    /**
                     * @description Unix timestamp for when the item will expire in milliseconds. Must be between 0 and 1 year (31 days for files).
                     * @default 1760881868782
                     * @example 1735689600000
                     */
                    expires: number | null;
                    /** @description An optional string that allows you to later delete the item before it expires. */
                    deleteToken?: string | null;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id: string;
                        code: string;
                        language: string | null;
                        createdAt: string;
                        updatedAt: string;
                        expiresAt: string | null;
                        type: string;
                    };
                };
            };
        };
    };
    postApiUpload: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    file: string;
                } & {
                    /**
                     * @description Unix timestamp for when the item will expire in milliseconds. Must be between 0 and 1 year (31 days for files).
                     * @default 1760881868783
                     * @example 1735689600000
                     */
                    expires: number | null;
                    /** @description An optional string that allows you to later delete the item before it expires. */
                    deleteToken?: string | null;
                } & {
                    /**
                     * @description Unix timestamp for when the item will expire in milliseconds. Must be between 0 and 1 year (31 days for files).
                     * @default 1760881868783
                     * @example 1735689600000
                     */
                    expires: number | null;
                    /** @description An optional string that allows you to later delete the item before it expires. */
                    deleteToken?: string | null;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id: string;
                        filename: string;
                        size: number;
                        hash: string;
                        createdAt: string;
                        updatedAt: string;
                        expiresAt: string | null;
                        type: string;
                    };
                };
            };
        };
    };
    getApiInfoById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id: string;
                        url: string;
                        createdAt: string;
                        updatedAt: string;
                        expiresAt: string | null;
                        type: string;
                    } | {
                        id: string;
                        code: string;
                        language: string | null;
                        createdAt: string;
                        updatedAt: string;
                        expiresAt: string | null;
                        type: string;
                    } | {
                        id: string;
                        filename: string;
                        size: number;
                        hash: string;
                        createdAt: string;
                        updatedAt: string;
                        expiresAt: string | null;
                        type: string;
                    };
                };
            };
        };
    };
    deleteApiDeleteById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    deleteToken: string;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        deleted: string;
                        status: number;
                    };
                };
            };
        };
    };
}
